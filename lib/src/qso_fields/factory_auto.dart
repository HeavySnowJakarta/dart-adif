/// The factory function to generate a ADIF-defined QSO field, generated by
/// `scripts/generate_qso_fields.dart`. Don't edit this file by hand.
library;

import '../data.dart';
import './total.dart';

AdifField adifFieldFactory(String fieldName, String value) {
  switch (fieldName) {
    case 'ADDRESS':
      return Address.fromString(value);
    case 'ADDRESS_INTL':
      return AddressIntl.fromString(value);
    case 'CALL':
      return Call.fromString(value);
    case 'CHECK':
      return Check.fromString(value);
    case 'CLASS':
      return Class.fromString(value);
    case 'CLUBLOG_QSO_UPLOAD_DATE':
      return ClublogQsoUploadDate.fromString(value);
    case 'COMMENT':
      return Comment.fromString(value);
    case 'COMMENT_INTL':
      return CommentIntl.fromString(value);
    case 'CONTACTED_OP':
      return ContactedOp.fromString(value);
    case 'CONTEST_ID':
      return ContestId.fromString(value);
    case 'COUNTRY':
      return Country.fromString(value);
    case 'COUNTRY_INTL':
      return CountryIntl.fromString(value);
    case 'CQZ':
      return Cqz.fromString(value);
    case 'DCL_QSLRDATE':
      return DclQslrdate.fromString(value);
    case 'DCL_QSLSDATE':
      return DclQslsdate.fromString(value);
    case 'EMAIL':
      return Email.fromString(value);
    case 'EQ_CALL':
      return EqCall.fromString(value);
    case 'EQSL_QSLRDATE':
      return EqslQslrdate.fromString(value);
    case 'EQSL_QSLSDATE':
      return EqslQslsdate.fromString(value);
    case 'FISTS':
      return Fists.fromString(value);
    case 'FISTS_CC':
      return FistsCc.fromString(value);
    case 'FORCE_INIT':
      return ForceInit.fromString(value);
    case 'GUEST_OP':
      return GuestOp.fromString(value);
    case 'HAMLOGEU_QSO_UPLOAD_DATE':
      return HamlogeuQsoUploadDate.fromString(value);
    case 'HAMQTH_QSO_UPLOAD_DATE':
      return HamqthQsoUploadDate.fromString(value);
    case 'HRDLOG_QSO_UPLOAD_DATE':
      return HrdlogQsoUploadDate.fromString(value);
    case 'IOTA_ISLAND_ID':
      return IotaIslandId.fromString(value);
    case 'ITUZ':
      return Ituz.fromString(value);
    case 'K_INDEX':
      return KIndex.fromString(value);
    case 'LAT':
      return Lat.fromString(value);
    case 'LON':
      return Lon.fromString(value);
    case 'LOTW_QSLRDATE':
      return LotwQslrdate.fromString(value);
    case 'LOTW_QSLSDATE':
      return LotwQslsdate.fromString(value);
    case 'MORSE_KEY_INFO':
      return MorseKeyInfo.fromString(value);
    case 'MS_SHOWER':
      return MsShower.fromString(value);
    case 'MY_ANTENNA':
      return MyAntenna.fromString(value);
    case 'MY_ANTENNA_INTL':
      return MyAntennaIntl.fromString(value);
    case 'MY_CITY':
      return MyCity.fromString(value);
    case 'MY_CITY_INTL':
      return MyCityIntl.fromString(value);
    case 'MY_COUNTRY':
      return MyCountry.fromString(value);
    case 'MY_COUNTRY_INTL':
      return MyCountryIntl.fromString(value);
    case 'MY_CQ_ZONE':
      return MyCqZone.fromString(value);
    case 'MY_FISTS':
      return MyFists.fromString(value);
    case 'MY_IOTA_ISLAND_ID':
      return MyIotaIslandId.fromString(value);
    case 'MY_ITU_ZONE':
      return MyItuZone.fromString(value);
    case 'MY_LAT':
      return MyLat.fromString(value);
    case 'MY_LON':
      return MyLon.fromString(value);
    case 'MY_MORSE_KEY_INFO':
      return MyMorseKeyInfo.fromString(value);
    case 'MY_NAME':
      return MyName.fromString(value);
    case 'MY_NAME_INTL':
      return MyNameIntl.fromString(value);
    case 'MY_POSTAL_CODE':
      return MyPostalCode.fromString(value);
    case 'MY_POSTAL_CODE_INTL':
      return MyPostalCodeIntl.fromString(value);
    case 'MY_RIG':
      return MyRig.fromString(value);
    case 'MY_RIG_INTL':
      return MyRigIntl.fromString(value);
    case 'MY_SIG':
      return MySig.fromString(value);
    case 'MY_SIG_INTL':
      return MySigIntl.fromString(value);
    case 'MY_SIG_INFO':
      return MySigInfo.fromString(value);
    case 'MY_SIG_INFO_INTL':
      return MySigInfoIntl.fromString(value);
    case 'MY_STREET':
      return MyStreet.fromString(value);
    case 'MY_STREET_INTL':
      return MyStreetIntl.fromString(value);
    case 'NAME':
      return Name.fromString(value);
    case 'NAME_INTL':
      return NameIntl.fromString(value);
    case 'NOTES':
      return Notes.fromString(value);
    case 'NOTES_INTL':
      return NotesIntl.fromString(value);
    case 'NR_BURSTS':
      return NrBursts.fromString(value);
    case 'NR_PINGS':
      return NrPings.fromString(value);
    case 'OPERATOR':
      return Operator.fromString(value);
    case 'OWNER_CALLSIGN':
      return OwnerCallsign.fromString(value);
    case 'PFX':
      return Pfx.fromString(value);
    case 'PRECEDENCE':
      return Precedence.fromString(value);
    case 'PUBLIC_KEY':
      return PublicKey.fromString(value);
    case 'QRZCOM_QSO_DOWNLOAD_DATE':
      return QrzcomQsoDownloadDate.fromString(value);
    case 'QRZCOM_QSO_UPLOAD_DATE':
      return QrzcomQsoUploadDate.fromString(value);
    case 'QSLMSG':
      return Qslmsg.fromString(value);
    case 'QSLMSG_INTL':
      return QslmsgIntl.fromString(value);
    case 'QSLMSG_RCVD':
      return QslmsgRcvd.fromString(value);
    case 'QSLRDATE':
      return Qslrdate.fromString(value);
    case 'QSLSDATE':
      return Qslsdate.fromString(value);
    case 'QSL_VIA':
      return QslVia.fromString(value);
    case 'QSO_DATE':
      return QsoDate.fromString(value);
    case 'QSO_DATE_OFF':
      return QsoDateOff.fromString(value);
    case 'QSO_RANDOM':
      return QsoRandom.fromString(value);
    case 'QTH':
      return Qth.fromString(value);
    case 'QTH_INTL':
      return QthIntl.fromString(value);
    case 'RIG':
      return Rig.fromString(value);
    case 'RIG_INTL':
      return RigIntl.fromString(value);
    case 'RST_RCVD':
      return RstRcvd.fromString(value);
    case 'RST_SENT':
      return RstSent.fromString(value);
    case 'SAT_MODE':
      return SatMode.fromString(value);
    case 'SAT_NAME':
      return SatName.fromString(value);
    case 'SFI':
      return Sfi.fromString(value);
    case 'SIG':
      return Sig.fromString(value);
    case 'SIG_INTL':
      return SigIntl.fromString(value);
    case 'SIG_INFO':
      return SigInfo.fromString(value);
    case 'SIG_INFO_INTL':
      return SigInfoIntl.fromString(value);
    case 'SILENT_KEY':
      return SilentKey.fromString(value);
    case 'SKCC':
      return Skcc.fromString(value);
    case 'SRX':
      return Srx.fromString(value);
    case 'SRX_STRING':
      return SrxString.fromString(value);
    case 'STATION_CALLSIGN':
      return StationCallsign.fromString(value);
    case 'STX':
      return Stx.fromString(value);
    case 'STX_STRING':
      return StxString.fromString(value);
    case 'SUBMODE':
      return Submode.fromString(value);
    case 'SWL':
      return Swl.fromString(value);
    case 'TEN_TEN':
      return TenTen.fromString(value);
    case 'TIME_OFF':
      return TimeOff.fromString(value);
    case 'TIME_ON':
      return TimeOn.fromString(value);
    case 'UKSMG':
      return Uksmg.fromString(value);
    case 'VE_PROV':
      return VeProv.fromString(value);
    case 'WEB':
      return Web.fromString(value);
    default:
      throw ArgumentError('Unknown field name: $fieldName');
  }
}
